---
import Layout from '@/layouts/MainLayout.astro';
import type { Props as MetadataProps } from '@/components/seo/Metadata.astro';
import {
  getLocaleWithFlag,
  SupportedLocaleArray,
  translations,
  type SupportedLocale,
} from '@/utils/localeUtils';
import HeroSection from '@/components/home/sections/HeroSection.astro';
import FeaturedStoriesSection from '@/components/home/sections/FeaturedStoriesSection.astro';
import AboutSection from '@/components/home/sections/AboutSection.astro';
import DestinationsSection from '@/components/home/sections/DestinationsSection.astro';
import GallerySection from '@/components/home/sections/GallerySection.astro';
import StayInspiredSectionHome from '@/components/home/sections/StayInspiredSectionHome.astro';

const { locale } = Astro.params;

const supportedLocale = locale as SupportedLocale;

const homeData = await translations[supportedLocale]['home.json']();
const heroData = homeData['hero'];

const metadata: MetadataProps = {
  title: 'Voyageblur',
  description: 'Voyageblur blog about travelling and photography',
  keywords: ['travel', 'bikepacking', 'adventures'],
  creator: 'Jakub Cezary Kolando',
  publisher: 'Jakub Cezary Kolando',
  metadataBase: new URL('https://voyageblur.com'),
  alternates: {
    canonical: '/',
    languages: {
      en: '/en',
      pl: '/pl',
    },
  },
  openGraph: {
    url: 'https://voyageblur.com',
    title: 'Voyablur - Travel Blog',
    description: 'Voyageblur - travel adentures',
    // place og-image.png in public folder
    image: 'https://voyageblur.com/og-image.png',
  },
   imagesToPreload: {
    remoteImages: [
      {
        href: "https://imagedelivery.net/Ap_RIQMnvK_LYOq1vIFisQ/37aed710-e371-4714-0520-f51fcb57da00/hd1920x1080",
        alt: "Background Image",
        media: "(min-width: 640px)"
      },
      {
        href: "https://imagedelivery.net/Ap_RIQMnvK_LYOq1vIFisQ/37aed710-e371-4714-0520-f51fcb57da00/hd1920x1080",
        alt: "Background Image",
        media: "(max-width: 639px)"
      }
    ]
  }
};
export async function getStaticPaths() {
  return SupportedLocaleArray.map((loc) => ({
    params: { locale: loc },
  }));
}

// Only needed if output is set to server in astro.config.mjs
export const prerender = true;
// Cache for 1h, serve stale for 60s while revalidating
Astro.response.headers.set(
  'Cache-Control',
  'public, s-maxage=3600, stale-while-revalidate=60'
);
---

<Layout metadata={metadata}>
  <div class="overflow-visible">
    <HeroSection />
    <FeaturedStoriesSection />
    <AboutSection />
    <DestinationsSection />
    <GallerySection />
    <StayInspiredSectionHome/>
  </div>
</Layout>
